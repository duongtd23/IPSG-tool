--> true
open TAS .
	op p : -> Pid .
	op s : -> Sys .
	red inv1(init,p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = rs .
	eq locked(s) = true .
	red inv1(s,p) implies inv1(enter(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = rs .
	eq locked(s) = false .
	red inv1(s,p) implies inv1(enter(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq (pc(s,r1) = rs) = false .
	red inv1(s,p) implies inv1(enter(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = cs .
	eq p = r1 .
	red inv1(s,p) implies inv1(exit(s,r1),p) .
close

--> true, use mutex as a lemma
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = cs .
	eq (p = r1) = false .
	eq pc(s,p) = cs .
	eq locked(s) = true .
	red mutex(s,p,r1) implies inv1(s,p) implies inv1(exit(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = cs .
	eq (p = r1) = false .
	eq pc(s,p) = cs .
	eq locked(s) = false .
	red inv1(s,p) implies inv1(exit(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq pc(s,r1) = cs .
	eq (p = r1) = false .
	eq (pc(s,p) = cs) = false .
	red inv1(s,p) implies inv1(exit(s,r1),p) .
close

--> true
open TAS .
	op p : -> Pid .
	op r1 : -> Pid .
	op s : -> Sys .
	eq (pc(s,r1) = cs) = false .
	red inv1(s,p) implies inv1(exit(s,r1),p) .
close

--> Time taken is 15ms